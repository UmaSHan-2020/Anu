import numpy as np 
import pandas as pd

crime_data=pd.read_csv("crime_data.csv", index_col=0)

crime_data.head()

crime_data.describe()

from sklearn import preprocessing
crime_data_standardized = preprocessing.scale(crime_data)
print(crime_data_standardized)
crime_data_standardized = pd.DataFrame(crime_data_standardized)


from sklearn.cluster import KMeans
import matplotlib.pyplot as plt
%matplotlib inline

plt.figure(figsize=(10, 8))
wcss = []
for i in range(1, 11):
    kmeans = KMeans(n_clusters = i, init = 'k-means++', random_state = 42)
    kmeans.fit(crime_data_standardized)
    wcss.append(kmeans.inertia_)
plt.plot(range(1, 11), wcss)
plt.title('The Elbow Method')
plt.xlabel('Number of clusters')
plt.ylabel('WCSS')
plt.show()

kmeans = KMeans(n_clusters = 4, init = 'k-means++', random_state = 42)
y_kmeans = kmeans.fit_predict(crime_data_standardized)

y_kmeans

y_kmeans1=y_kmeans+1
cluster = list(y_kmeans1)
crime_data['cluster'] = cluster
kmeans_mean_cluster = pd.DataFrame(round(crime_data.groupby('cluster').mean(),1))
kmeans_mean_cluster

import seaborn as sns
plt.figure(figsize=(12,6))
sns.scatterplot(x=crime_data['Murder'], y = crime_data['Assault'],hue=y_kmeans1)

crime_data[crime_data['cluster']==1]


from IPython.display import HTML
import base64

df = crime_data
def create_download_link( df, title = "Download CSV file", filename = "data.csv"):  
    csv = df.to_csv()
    b64 = base64.b64encode(csv.encode())
    payload = b64.decode()
    html = '<a download="{filename}" href="data:text/csv;base64,{payload}" target="_blank">{title}</a>'
    html = html.format(payload=payload,title=title,filename=filename)
    return HTML(html)

create_download_link(df)
